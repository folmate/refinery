% Copyright (c) 2024 The Refinery Authors <https://refinery.tools/>
%
% SPDX-License-Identifier: EPL-2.0

import builtin::strategy.

class A {
    @concretize(false)
    A[] foo
}

pred hasCommonFoo(A a1, A a2) <->
    a1 != a2,
    a1 != a3,
    a2 != a3,
    foo(a1, a3),
    foo(a2, a3).

pred noCommonFoo(A a1, A a2) subsets foo <->
    a1 != a2,
    !hasCommonFoo(a1, a2).

!exists(A::new).
atom x, y, z.
A(x).
A(y).
A(z).
concretization rule addNoFoo() ==> !foo(x, z).

% EXPECT CANDIDATE:
foo(x, y).
foo(y, x).
!noCommonFoo(x, z).
